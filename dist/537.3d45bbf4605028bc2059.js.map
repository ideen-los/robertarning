{"version":3,"file":"537.3d45bbf4605028bc2059.js","mappings":"2HAGO,MAAMA,EAA4B,WACvC,IACE,MAAMC,EAAO,eAGb,OAFAC,eAAeC,QAAQF,EAAMA,GAC7BC,eAAeE,WAAWH,IACnB,CACT,CAAE,MAAOI,GACP,OAAO,CACT,CACF,ECNaC,EAAWC,iBAEtB,IAAIC,EAEJ,GAHAC,QAAQC,IAAI,mBAGRV,EAA2B,CAC7BS,QAAQC,IAAI,+BACZ,MAAMC,EAAaC,KAAKC,MAAMX,eAAeY,QAAQ,SAErD,GAAIH,EAKF,OAHAF,QAAQC,IAAI,uCACZF,EAAOG,EACPF,QAAQC,IAAIF,GACLA,CAEX,CAIA,IACEC,QAAQC,IAAI,mBACZ,MAAMK,QAAiBC,MAAM,mBAC7B,IAAKD,EAASE,GAEZ,MAAM,IAAIC,MAAM,uBAAuBH,EAASI,UAWlD,OARAX,QAAaO,EAASK,OACtBX,QAAQC,IAAIF,GAGRR,IACFE,eAAeC,QAAQ,OAAQS,KAAKS,UAAUb,IAC9CC,QAAQC,IAAI,iCAEPF,CACT,CAAE,MAAOc,GAEP,OADAb,QAAQa,MAAM,uBAAwBA,GAC/B,IACT,CACF,C,2GC3CA,MA0BaC,EAAmBhB,eAAgBiB,GAC9C,MAAM,gBAAEC,EAAe,YAAEC,SA3BQnB,eAAgBiB,GACjD,MAAMhB,QAAa,SAEnB,IACE,IAAKA,IAASgB,EAEZ,OADAf,QAAQa,MAAM,gCACP,GAGT,MAAMK,EAAcnB,EAAKoB,SACnBC,EAAsBC,OAAON,EAAQO,IAAM,EAG3CL,EAAcC,GADME,EAAsB,GAAKF,EAAYK,QAOjE,MAAO,CAAEP,gBAFeE,GADrBE,EAAsB,EAAIF,EAAYK,QAAUL,EAAYK,QAGrCN,cAC5B,CAAE,MAAOJ,GAEP,OADAb,QAAQa,MAAM,sBAAuBA,GAC9B,EACT,CACF,CAGiDW,CAA2BT,GAE1E,IACE,IAAKC,IAAoBC,EAEvB,OADAjB,QAAQa,MAAM,kDACP,GAGT,MAAMY,GAAyB,IAAAC,sBAAqBV,EAAgBW,aAC9DC,GAAqB,IAAAF,sBAAqBT,EAAYU,aAE5D,MAAO,qGAAqGF,kEAAuFT,EAAgBa,iCAAiCD,8DAA+EX,EAAYY,sCACjV,CAAE,MAAOhB,GAEP,OADAb,QAAQa,MAAM,sBAAuBA,GAC9B,EACT,CACF,EAEaiB,EAA0B,WACrC,MAAMC,EAAsBC,SAASC,cAAc,qBAC7CC,EAAkBF,SAASC,cAAc,iBAEzCR,EAAyBM,EAAoBI,KAAKC,MAAM,KAAK,GAC7DR,EAAqBM,EAAgBC,KAAKC,MAAM,KAAK,GAE3DL,EAAoBM,iBAAiB,SAAUzC,IAC7CA,EAAE0C,kBACF,IAAAC,sBAAqBd,EAAuB,IAG9CS,EAAgBG,iBAAiB,SAAUzC,IACzCA,EAAE0C,kBACF,IAAAC,sBAAqBX,EAAmB,GAE5C,C","sources":["webpack://robertarning/./src/sessionStorage.js","webpack://robertarning/./src/data.js","webpack://robertarning/./src/moreProjects.js"],"sourcesContent":["/*\nTests if sessionStorage is available in the users browser\n*/\nexport const isSessionStorageAvailable = function () {\n  try {\n    const test = 'test-storage';\n    sessionStorage.setItem(test, test);\n    sessionStorage.removeItem(test);\n    return true;\n  } catch (e) {\n    return false;\n  }\n};\n","import { isSessionStorageAvailable } from './sessionStorage';\n\n/* \nLoads a JSON file with all data from the server and saves it\nto sessionStorage if available, so the data is cached for further use.\n*/\nexport const loadData = async function () {\n  console.log('Initializing...');\n  let data;\n\n  if (isSessionStorageAvailable) {\n    console.log('sessionStorage available...');\n    const storedData = JSON.parse(sessionStorage.getItem('data'));\n\n    if (storedData) {\n      // Gets the data from sessionStorage\n      console.log('Loaded projects from sessionStorage');\n      data = storedData;\n      console.log(data);\n      return data;\n    }\n  }\n\n  // No sessionStorage available or no data in sessionStorage:\n  // fetch the data.json from the server\n  try {\n    console.log('Getting data...');\n    const response = await fetch('/data/data.json');\n    if (!response.ok) {\n      // Check if the HTTP status code is in the 200-299 range\n      throw new Error(`HTTP error! Status: ${response.status}`);\n    }\n\n    data = await response.json();\n    console.log(data);\n\n    // Save fetched data to sessionStorage\n    if (isSessionStorageAvailable) {\n      sessionStorage.setItem('data', JSON.stringify(data));\n      console.log('Saved data to sessionStorage');\n    }\n    return data;\n  } catch (error) {\n    console.error('Failed to load data:', error);\n    return null;\n  }\n};\n","import { loadData } from './data';\nimport { convertToURLSaveName, pushURLAndCallRouter } from './helperFunctions';\n\nconst findPreviousAndNextProject = async function (project) {\n  const data = await loadData();\n\n  try {\n    if (!data || !project) {\n      console.error('No data or project available');\n      return '';\n    }\n\n    const allProjects = data.projects;\n    const currentProjectIndex = Number(project.id) - 1;\n\n    const nextProjectIndex = (currentProjectIndex + 1) % allProjects.length;\n    const nextProject = allProjects[nextProjectIndex];\n\n    const previousProjectIndex =\n      (currentProjectIndex - 1 + allProjects.length) % allProjects.length;\n    const previousProject = allProjects[previousProjectIndex];\n\n    return { previousProject, nextProject };\n  } catch (error) {\n    console.error('Failed to load data', error);\n    return '';\n  }\n};\n\nexport const showMoreProjects = async function (project) {\n  const { previousProject, nextProject } = await findPreviousAndNextProject(project);\n\n  try {\n    if (!previousProject || !nextProject) {\n      console.error('No data on previous and next project available');\n      return '';\n    }\n\n    const previousProjectURLPath = convertToURLSaveName(previousProject.projectName);\n    const nextProjectURLPath = convertToURLSaveName(nextProject.projectName);\n\n    return `<section class=\"more-projects\"><h2>Mehr Projekte</h2><div class=\"more-projects-wrapper\"><a href=\"/${previousProjectURLPath}\" class=\"previous-project\"><div style=\"background-image: url('${previousProject.image}');\"></div></a><a href=\"/${nextProjectURLPath}\" class=\"next-project\"><div style=\"background-image: url('${nextProject.image}');\"></div></a></div></section>`;\n  } catch (error) {\n    console.error('Failed to load data', error);\n    return '';\n  }\n};\n\nexport const handleMoreProjectsLinks = function () {\n  const previousProjectLink = document.querySelector('.previous-project');\n  const nextProjectLink = document.querySelector('.next-project');\n\n  const previousProjectURLPath = previousProjectLink.href.split('/')[3];\n  const nextProjectURLPath = nextProjectLink.href.split('/')[3];\n\n  previousProjectLink.addEventListener('click', (e) => {\n    e.preventDefault();\n    pushURLAndCallRouter(previousProjectURLPath);\n  });\n\n  nextProjectLink.addEventListener('click', (e) => {\n    e.preventDefault();\n    pushURLAndCallRouter(nextProjectURLPath);\n  });\n};\n"],"names":["isSessionStorageAvailable","test","sessionStorage","setItem","removeItem","e","loadData","async","data","console","log","storedData","JSON","parse","getItem","response","fetch","ok","Error","status","json","stringify","error","showMoreProjects","project","previousProject","nextProject","allProjects","projects","currentProjectIndex","Number","id","length","findPreviousAndNextProject","previousProjectURLPath","convertToURLSaveName","projectName","nextProjectURLPath","image","handleMoreProjectsLinks","previousProjectLink","document","querySelector","nextProjectLink","href","split","addEventListener","preventDefault","pushURLAndCallRouter"],"sourceRoot":""}